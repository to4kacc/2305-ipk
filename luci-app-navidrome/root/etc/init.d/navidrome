#!/bin/sh /etc/rc.common

START=99
STOP=90
USE_PROCD=1

user="navidrome"
config_path="/etc/navidrome/navidrome.toml"
lock_file="/tmp/navidrome/update.lock"

get_config() {
	config_load navidrome
	config_get Enable 'config' 'Enable'
	config_get Program_path 'config' 'Program_path'
	config_names="MusicFolder DataFolder CacheFolder ScanSchedule ImageCacheSize TranscodingCacheSize Address Port LogLevel"

	for config_name in $config_names; do
		modify_config "$config_name"
	done

	[ -z "$Enable" ] || [ "$Enable" -eq 0 ] && { echo "Navidrome is not enabled. Exiting..."; return 1; }
	[ ! -d "$DataFolder" ] && { logger -p daemon.error -t "navidrome[${$}]" "DataFolder folder does not exist. Exiting..."; return 1; }
	[ ! -d "$MusicFolder" ] && { logger -p daemon.error -t "navidrome[${$}]" "MusicFolder folder does not exist. Exiting..."; return 1; }
	return 0
}

modify_config() {
	local config_name="$1"
	local config_value
	config_get "$config_name" 'config' "$config_name"
	eval "config_value=\$$config_name"
	[ -z "$config_value" ] && return

	[ "$config_name" = "ScanSchedule" ] && config_name="Scanner.Schedule"

	# 删除旧的配置项
	sed -i "/^$config_name /d" "$config_path"

	# 写入新的配置项
	echo "$config_name = \"$config_value\"" >> "$config_path"
}

start_service() {
	get_config || return 1
	procd_open_instance
	if [ -f "$Program_path" ];then
		# 启动 navidrome
		procd_set_param command ${Program_path}
		procd_append_param command --configfile "$config_path"
		echo "Started navidrome process."
	else
		procd_set_param command /usr/libexec/navidrome-call
		procd_append_param command update
	fi
	procd_set_param term_timeout 15
	procd_set_param user "$user"
	# 崩溃时重启
	#procd_set_param respawn
	procd_set_param stdout 0
	procd_set_param stderr 1
	procd_close_instance

}

stop_service() {
    rm -f "$lock_file"
}

reload_service() {
	stop
	sleep 1
	start
}

service_triggers() {
	procd_add_reload_trigger navidrome
}
